# Для Debian/Ubuntu обычно пользователь 'www-data', для CentOS/RHEL - 'nginx'.
user www-data;

# Количество рабочих процессов, 'auto' установит значение равное числу ядер CPU.
worker_processes auto;

# Файл для хранения PID главного процесса.
pid /var/run/nginx.pid;

events {
    # Максимальное количество одновременных соединений на один рабочий процесс.
    worker_connections 1024;
}

http {
    # --- Основные настройки HTTP ---

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Формат и расположение логов.
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;

    # Включает более эффективный метод отправки файлов.
    sendfile on;
    # Оптимизирует отправку пакетов (можно раскомментировать при необходимости).
    # tcp_nopush on;

    # Время ожидания для keep-alive соединений.
    keepalive_timeout 65;

    # --- Настройки сжатия Gzip ---
    # Ускоряет загрузку текстового контента (HTML, CSS, JS, JSON).
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # --- Определение вышестоящих серверов (бэкендов) ---

    upstream user_svc {
        # keepalive 16; # Раскомментируйте для переиспользования соединений к бэкенду
        server 127.0.0.1:8002;
    }

    upstream ads_svc {
        # keepalive 16;
        server 127.0.0.1:8001;
    }

    # --- Конфигурация основного сервера ---

    # --- Конфигурация основного сервера ---
    server {
        listen 80;
        server_name 51.250.43.104;

        client_max_body_size 20M;

        # --- Глобальные настройки проксирования ---
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header   Connection "";
        proxy_connect_timeout 5s;
        proxy_read_timeout    30s;

        # --- ЗАЩИТА ДОКУМЕНТАЦИИ API ---
        # Используем '=' для точного совпадения, чтобы защитить только /docs, а не /docs/something/else

        location = /ads/docs {
            auth_basic "Restricted Access: API Docs"; # Сообщение в окне аутентификации
            auth_basic_user_file /etc/nginx/.htpasswd;   # Путь к файлу с паролями
            proxy_pass http://ads_svc; # Проксируем запрос, если аутентификация пройдена
        }

        location = /ads/openapi.json {
            auth_basic "Restricted Access: API Schema";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://ads_svc;
        }

        location = /auth/docs {
            auth_basic "Restricted Access: API Docs";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://user_svc;
        }

        location = /auth/openapi.json {
            auth_basic "Restricted Access: API Schema";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://user_svc;
        }

        # --- Маршрутизация запросов (Locations) ---
        # Эти блоки теперь идут ПОСЛЕ блоков защиты

        location ^~ /ads/static/ {
            proxy_pass http://ads_svc;
            proxy_buffering off;
        }

        location ^~ /media/ads/ {
            alias /home/chipoh/chipoh/media/ads_uploads/;
            expires 1d;
            access_log off;
        }

        location ^~ /media/avatars/ {
            alias /home/chipoh/chipoh/media/user_avatars/;
            expires 1d;
            access_log off;
        }

        location /ads/ {
            proxy_pass http://ads_svc;
        }

        location ^~ /static/ {
            proxy_pass http://user_svc;
            proxy_buffering off;
        }

        location /auth/ {
            proxy_pass http://user_svc;
        }

        location /user/ {
            proxy_pass http://user_svc;
        }

        location = / {
            return 301 /ads/;
        }
    }

    # Если вы планируете добавлять другие сайты, хорошей практикой будет
    # вынести конфигурацию блока server в отдельный файл
    # и подключить его здесь. Например:
    # include /etc/nginx/conf.d/*.conf;
    # или
    # include /etc/nginx/sites-enabled/*;
}